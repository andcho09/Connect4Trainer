group = 'Connect4Store'
description = 'Connect 4 Lambda function to receive interesting boards and save to DynamoDB'
ext.shortName = 'store'

jar {
	manifest {
		attributes 'Implementation-Title': group,
				   'Implementation-Version': version
	}
}

dependencies {
	implementation project(':Connect4CoreApi')
	implementation group: 'commons-lang', name: 'commons-lang', version:'2.6'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version:'1.11.683'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version:'1.2.0'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version:'1.3.0'
	implementation group: 'log4j', name: 'log4j', version:'1.2.17'
}

task buildZip(type: Zip, group: "Custom", description: "Creates .zip for upload to AWS Lambda") {
	from compileJava
	from project(':Connect4TrainerFunction').file('src/main/resources/log4j_lambda.properties')
	into('lib') {
		from configurations.runtimeClasspath {
			// Remove libraries provided by AWS runtime
			exclude group: 'com.amazonaws', module: 'aws-lambda-java-core'
			exclude group: 'com.amazonaws', module: 'aws-lambda-java-events'
			// Remove unused AWS libraries
			exclude group: 'com.amazonaws', module: 'aws-java-sdk-cognitoidentity'
			exclude group: 'com.amazonaws', module: 'aws-java-sdk-kinesis'
			exclude group: 'com.amazonaws', module: 'aws-java-sdk-kms'
			exclude group: 'com.amazonaws', module: 'aws-java-sdk-kinesis'
			exclude group: 'com.amazonaws', module: 'aws-java-sdk-s3'
			exclude group: 'com.amazonaws', module: 'aws-java-sdk-sns'
			exclude group: 'com.amazonaws', module: 'aws-java-sdk-sqs'
		}
	}
	rename('log4j_lambda.properties', 'log4j.properties')
}

build.dependsOn buildZip
