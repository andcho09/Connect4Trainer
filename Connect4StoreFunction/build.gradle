group = 'Connect4Store'
description = 'Connect 4 Lambda function to receive interesting boards and save to DynamoDB'
ext.shortName = 'store'

jar {
	manifest {
		attributes 'Implementation-Title': group,
				   'Implementation-Version': archiveVersion
	}
}

dependencies {
	implementation project(':Connect4CoreApi')
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.12.128'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.1'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '3.11.0'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-log4j2', version: '1.3.0'
	implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-aws-sdk', version: '2.10.0'
	implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-aws-sdk-instrumentor', version: '2.10.0'
	implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-core', version: '2.10.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.0'
	runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'
}

configurations.create('releaseWithXRay')
configurations.releaseWithXRay {
	extendsFrom configurations.runtimeClasspath
	transitive = true
	
	// Remove libraries provided by AWS runtime
	exclude group: 'com.amazonaws', module: 'aws-lambda-java-core'
	exclude group: 'com.amazonaws', module: 'aws-lambda-java-events'
	// Remove unused AWS libraries
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-cognitoidentity'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-kinesis'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-kms'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-kinesis'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-s3'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-sns'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-sqs'
}

configurations.create('releaseWithoutXRay')
configurations.releaseWithoutXRay {
	extendsFrom configurations.releaseWithXRay
	transitive = true
	
	// Remove X-Ray libraries
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-xray'
	exclude group: 'com.amazonaws', module: 'aws-xray-recorder-sdk-aws-sdk'
	exclude group: 'com.amazonaws', module: 'aws-xray-recorder-sdk-aws-sdk-instrumentor'
}

task buildZip(type: Zip, group: "Custom", description: "Creates .zip for upload to AWS Lambda") {
	from compileJava
	from project(':Connect4TrainerFunction').file('src/main/resources/log4j_lambda.xml')
	into('lib') {
		from configurations.releaseWithoutXRay
	}
	rename('log4j_lambda.xml', 'log4j.xml')
}

task buildZipWithXRay(type: Zip, group: "Custom", description: "Creates .zip for upload to AWS Lambda with X-Ray debugging") {
	archiveAppendix = "XRay"
	from compileJava
	from file('src/main/resources/log4j_lambda.xml')
	into('lib') {
		from configurations.releaseWithXRay
	}
	rename('log4j_lambda.xml', 'log4j.xml')
}

build.dependsOn buildZip, buildZipWithXRay
