plugins {
    id 'com.eriwen.gradle.js' version '2.14.1'
    id 'java'
    id 'maven'
}

group = 'Connect4Trainer'
version = '0.0.1-SNAPSHOT'

description = "Connect4Trainer"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    manifest {
        attributes 'Implementation-Title': 'Connect 4 Trainer',
                   'Implementation-Version': version
    }
}

repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    implementation group: 'commons-io', name: 'commons-io', version:'2.6'
    implementation group: 'commons-lang', name: 'commons-lang', version:'2.6'
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version:'1.2.0'
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version:'1.3.0'
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-log4j', version:'1.0.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.9.10'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.9.10.1'
    implementation group: 'log4j', name: 'log4j', version:'1.2.17'
    implementation group: 'com.sparkjava', name: 'spark-core', version:'2.9.1'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.21'
    testImplementation group: 'junit', name: 'junit', version:'4.12'
}

task buildZip(type: Zip, group: "Custom", description: "Creates .zip for upload to AWS Lambda") {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath {
            // AWS Lambda doesn't use Spark/Jetty
            exclude group: 'com.sparkjava', module: 'spark-core'
            // Remove unused AWS libraries
            exclude group: 'com.amazonaws', module: 'aws-java-sdk-cognitoidentity'
            exclude group: 'com.amazonaws', module: 'aws-java-sdk-dynamodb'
            exclude group: 'com.amazonaws', module: 'aws-java-sdk-kinesis'
            exclude group: 'com.amazonaws', module: 'aws-java-sdk-sns'
            // Possibly AWS KMS here too?
        }
    }
}

// Create web artifacts directory for distribution
task copyAwsWeb(type: Copy) {
    from file('src/main/webapp/')
        include '*.htm'
    into file("$buildDir/distributions-s3/")
    doLast{
        ant.gzip(src: 'src/main/webapp/favicon.ico', destfile: file("$buildDir/distributions-s3/favicon.ico"))
    }
}

// Minify JS
javascript.source {
    dev {
        js {
            srcDir 'src/main/webapp'
            include '*.js'
            exclude '*.min.js'
        }
    }
}

minifyJs {
    source = javascript.source.dev.js.files
    dest = file("$buildDir/distributions-s3/game.js")
    sourceMap = file("$buildDir/all.sourcemap.json")
    closure {
        warningLevel = 'QUIET'
    }
}

minifyJs.dependsOn copyAwsWeb
build.dependsOn buildZip, minifyJs
