plugins {
	id 'org.padler.gradle.minify' version '1.2.1'
}

group = 'Connect4Trainer'
description = 'Connect 4 Lambda function which receives JSON REST requests from web UI'
ext.shortName = 'trainer'

jar {
	manifest {
		attributes 'Implementation-Title': group,
				   'Implementation-Version': archiveVersion
	}
}

dependencies {
	implementation project(':Connect4CoreApi')
	implementation group: 'commons-io', name: 'commons-io', version:'2.6'
	implementation group: 'commons-lang', name: 'commons-lang', version:'2.6'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version:'1.11.683'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version:'1.2.0'
	implementation group: 'com.amazonaws', name: 'aws-lambda-java-log4j', version: '1.0.0'
	implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-aws-sdk', version: '2.4.0'
	implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-aws-sdk-instrumentor', version: '2.4.0'
	implementation group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-core', version: '2.4.0'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.9.10'
	implementation group: 'com.sparkjava', name: 'spark-core', version:'2.9.1'
	implementation group: 'log4j', name: 'log4j', version:'1.2.17'
	implementation group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.29'
	compileOnly project(':Connect4StoreFunction') // For Main to send boards to DynamoDb but isn't needed for Lambda
	testImplementation project(':Connect4StoreFunction')
	testImplementation group: 'junit', name: 'junit', version:'4.12'
}

configurations.create('releaseWithXRay')
configurations.releaseWithXRay {
	extendsFrom configurations.runtimeClasspath
	transitive = true
	
	// Remove libraries provided by AWS runtime
	exclude group: 'com.amazonaws', module: 'aws-lambda-java-core'
	exclude group: 'com.amazonaws', module: 'aws-lambda-java-events'
	// AWS Lambda doesn't use Spark/Jetty
	exclude group: 'com.sparkjava', module: 'spark-core'
	// Remove unused AWS libraries
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-cognitoidentity'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-dynamodb'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-kinesis'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-kms'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-s3'
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-sqs'
}

configurations.create('releaseWithoutXRay')
configurations.releaseWithoutXRay {
	extendsFrom configurations.releaseWithXRay
	transitive = true
	
	// Remove X-Ray libraries
	exclude group: 'com.amazonaws', module: 'aws-java-sdk-xray'
	exclude group: 'com.amazonaws', module: 'aws-xray-recorder-sdk-aws-sdk'
	exclude group: 'com.amazonaws', module: 'aws-xray-recorder-sdk-aws-sdk-instrumentor'
}

task buildZip(type: Zip, group: "Custom", description: "Creates .zip for upload to AWS Lambda") {
	from compileJava
	from file('src/main/resources/log4j_lambda.properties')
	into('lib') {
		from configurations.releaseWithoutXRay
	}
	rename('log4j_lambda.properties', 'log4j.properties')
}

task buildZipWithXRay(type: Zip, group: "Custom", description: "Creates .zip for upload to AWS Lambda with X-Ray debugging") {
	archiveAppendix = "XRay"
	from compileJava
	from file('src/main/resources/log4j_lambda.properties')
	into('lib') {
		from configurations.releaseWithXRay
	}
	rename('log4j_lambda.properties', 'log4j.properties')
}

// Create web artifacts directory for distribution
task copyAwsWeb(type: Copy) {
	from file('src/main/webapp/static')
		exclude '*.ico'
	into file("$buildDir/distributions-s3/")
	doLast{
		ant.gzip(src: 'src/main/webapp/static/favicon.ico', destfile: file("$buildDir/distributions-s3/favicon.ico"))
	}
}

//org.padler.gradle.minify defines a 'minify' task
minification {
	jsDstDir = "$buildDir/distributions-s3/"
	jsSrcDir = "$projectDir/src/main/webapp/js"
}

minify.dependsOn copyAwsWeb
build.dependsOn buildZip, buildZipWithXRay, minify